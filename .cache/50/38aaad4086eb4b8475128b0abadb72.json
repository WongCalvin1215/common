{"id":"src/functions/common.js","dependencies":[{"name":"/project/common/package.json","includedInParent":true,"mtime":1671770839501}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _config = {\n  lang: \"en\"\n};\nvar Common = /*#__PURE__*/function () {\n  function Common(days, hours, minutes) {\n    _classCallCheck(this, Common);\n    this.config = {\n      lang: \"en\"\n    };\n    this.days = this.is_number(days) ? days : 0;\n    this.hours = this.is_number(hours) ? hours : 0;\n    this.minutes = this.is_number(minutes) ? minutes : 0;\n  }\n\n  //CORE\n  _createClass(Common, [{\n    key: \"add_subtract\",\n    value: function add_subtract(value, direction) {\n      this.days = this.days + value * direction;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      this.add_subtract(value, 1);\n      return this;\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(value) {\n      this.add_subtract(value, -1);\n      return this;\n    }\n\n    //CHECKING\n  }, {\n    key: \"is_undefined\",\n    value: function is_undefined(input) {\n      return input === void 0;\n    }\n  }, {\n    key: \"is_null_undefined\",\n    value: function is_null_undefined(input) {\n      return input == null;\n    }\n  }, {\n    key: \"is_number\",\n    value: function is_number(input) {\n      return typeof input === \"number\" || Object.prototype.toString.call(input) === \"[object Number]\";\n    }\n  }, {\n    key: \"is_boolean\",\n    value: function is_boolean(input) {\n      return typeof input === \"boolean\";\n    }\n\n    //CONFIG\n  }, {\n    key: \"lang\",\n    value: function lang(value) {\n      _config.lang = value;\n      return this;\n    }\n\n    //DISPLAY\n  }, {\n    key: \"format\",\n    value: function format() {\n      return _config.lang === \"chn\" ? \"\".concat(this.days, \"\\u65E5\").concat(this.hours, \"\\u5C0F\\u6642\").concat(this.minutes, \"\\u5206\") : \"\".concat(this.days, \"-\").concat(this.hours, \"-\").concat(this.minutes);\n    }\n  }, {\n    key: \"sleep\",\n    value: function sleep() {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, Math.random() * 1000);\n      });\n    }\n  }, {\n    key: \"resolve_all\",\n    value: function () {\n      var _resolve_all = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(function_arr) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Promise.all(function_arr.map(function (f) {\n                return f();\n              }));\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function resolve_all(_x) {\n        return _resolve_all.apply(this, arguments);\n      }\n      return resolve_all;\n    }()\n  }]);\n  return Common;\n}();\nexports.default = Common;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":47},"source":"src/functions/common.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"src/functions/common.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"src/functions/common.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"src/functions/common.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"src/functions/common.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"src/functions/common.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"src/functions/common.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"src/functions/common.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"src/functions/common.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":4},"source":"src/functions/common.js","original":{"line":1,"column":4},"name":"_config"},{"generated":{"line":16,"column":11},"source":"src/functions/common.js","original":{"line":1,"column":11}},{"generated":{"line":16,"column":14},"source":"src/functions/common.js","original":{"line":1,"column":14}},{"generated":{"line":17,"column":2},"source":"src/functions/common.js","original":{"line":1,"column":16},"name":"lang"},{"generated":{"line":17,"column":6},"source":"src/functions/common.js","original":{"line":1,"column":20}},{"generated":{"line":17,"column":8},"source":"src/functions/common.js","original":{"line":1,"column":22}},{"generated":{"line":18,"column":0},"source":"src/functions/common.js","original":{"line":1,"column":27}},{"generated":{"line":18,"column":1},"source":"src/functions/common.js","original":{"line":1,"column":28}},{"generated":{"line":19,"column":0},"source":"src/functions/common.js","original":{"line":1,"column":29}},{"generated":{"line":19,"column":4},"source":"src/functions/common.js","original":{"line":3,"column":21},"name":"Common"},{"generated":{"line":19,"column":10},"source":"src/functions/common.js","original":{"line":3,"column":27}},{"generated":{"line":20,"column":2},"source":"src/functions/common.js","original":{"line":4,"column":2}},{"generated":{"line":20,"column":18},"source":"src/functions/common.js","original":{"line":4,"column":14},"name":"days"},{"generated":{"line":20,"column":22},"source":"src/functions/common.js","original":{"line":4,"column":18}},{"generated":{"line":20,"column":24},"source":"src/functions/common.js","original":{"line":4,"column":20},"name":"hours"},{"generated":{"line":20,"column":29},"source":"src/functions/common.js","original":{"line":4,"column":25}},{"generated":{"line":20,"column":31},"source":"src/functions/common.js","original":{"line":4,"column":27},"name":"minutes"},{"generated":{"line":20,"column":38},"source":"src/functions/common.js","original":{"line":4,"column":34}},{"generated":{"line":20,"column":40},"source":"src/functions/common.js","original":{"line":4,"column":36}},{"generated":{"line":21,"column":4},"source":"src/functions/common.js","original":{"line":4,"column":36}},{"generated":{"line":22,"column":4},"source":"src/functions/common.js","original":{"line":5,"column":4}},{"generated":{"line":22,"column":8},"source":"src/functions/common.js","original":{"line":5,"column":8}},{"generated":{"line":22,"column":9},"source":"src/functions/common.js","original":{"line":5,"column":9},"name":"config"},{"generated":{"line":22,"column":15},"source":"src/functions/common.js","original":{"line":5,"column":15}},{"generated":{"line":22,"column":18},"source":"src/functions/common.js","original":{"line":5,"column":18}},{"generated":{"line":23,"column":6},"source":"src/functions/common.js","original":{"line":5,"column":20},"name":"lang"},{"generated":{"line":23,"column":10},"source":"src/functions/common.js","original":{"line":5,"column":24}},{"generated":{"line":23,"column":12},"source":"src/functions/common.js","original":{"line":5,"column":26}},{"generated":{"line":24,"column":4},"source":"src/functions/common.js","original":{"line":5,"column":31}},{"generated":{"line":24,"column":5},"source":"src/functions/common.js","original":{"line":5,"column":32}},{"generated":{"line":25,"column":4},"source":"src/functions/common.js","original":{"line":6,"column":4}},{"generated":{"line":25,"column":8},"source":"src/functions/common.js","original":{"line":6,"column":8}},{"generated":{"line":25,"column":9},"source":"src/functions/common.js","original":{"line":6,"column":9},"name":"days"},{"generated":{"line":25,"column":13},"source":"src/functions/common.js","original":{"line":6,"column":13}},{"generated":{"line":25,"column":16},"source":"src/functions/common.js","original":{"line":6,"column":16}},{"generated":{"line":25,"column":20},"source":"src/functions/common.js","original":{"line":6,"column":20}},{"generated":{"line":25,"column":21},"source":"src/functions/common.js","original":{"line":6,"column":21},"name":"is_number"},{"generated":{"line":25,"column":30},"source":"src/functions/common.js","original":{"line":6,"column":30}},{"generated":{"line":25,"column":31},"source":"src/functions/common.js","original":{"line":6,"column":31},"name":"days"},{"generated":{"line":25,"column":35},"source":"src/functions/common.js","original":{"line":6,"column":35}},{"generated":{"line":25,"column":36},"source":"src/functions/common.js","original":{"line":6,"column":36}},{"generated":{"line":25,"column":39},"source":"src/functions/common.js","original":{"line":6,"column":39},"name":"days"},{"generated":{"line":25,"column":43},"source":"src/functions/common.js","original":{"line":6,"column":43}},{"generated":{"line":25,"column":46},"source":"src/functions/common.js","original":{"line":6,"column":46}},{"generated":{"line":25,"column":47},"source":"src/functions/common.js","original":{"line":6,"column":47}},{"generated":{"line":26,"column":4},"source":"src/functions/common.js","original":{"line":7,"column":4}},{"generated":{"line":26,"column":8},"source":"src/functions/common.js","original":{"line":7,"column":8}},{"generated":{"line":26,"column":9},"source":"src/functions/common.js","original":{"line":7,"column":9},"name":"hours"},{"generated":{"line":26,"column":14},"source":"src/functions/common.js","original":{"line":7,"column":14}},{"generated":{"line":26,"column":17},"source":"src/functions/common.js","original":{"line":7,"column":17}},{"generated":{"line":26,"column":21},"source":"src/functions/common.js","original":{"line":7,"column":21}},{"generated":{"line":26,"column":22},"source":"src/functions/common.js","original":{"line":7,"column":22},"name":"is_number"},{"generated":{"line":26,"column":31},"source":"src/functions/common.js","original":{"line":7,"column":31}},{"generated":{"line":26,"column":32},"source":"src/functions/common.js","original":{"line":7,"column":32},"name":"hours"},{"generated":{"line":26,"column":37},"source":"src/functions/common.js","original":{"line":7,"column":37}},{"generated":{"line":26,"column":38},"source":"src/functions/common.js","original":{"line":7,"column":38}},{"generated":{"line":26,"column":41},"source":"src/functions/common.js","original":{"line":7,"column":41},"name":"hours"},{"generated":{"line":26,"column":46},"source":"src/functions/common.js","original":{"line":7,"column":46}},{"generated":{"line":26,"column":49},"source":"src/functions/common.js","original":{"line":7,"column":49}},{"generated":{"line":26,"column":50},"source":"src/functions/common.js","original":{"line":7,"column":50}},{"generated":{"line":27,"column":4},"source":"src/functions/common.js","original":{"line":8,"column":4}},{"generated":{"line":27,"column":8},"source":"src/functions/common.js","original":{"line":8,"column":8}},{"generated":{"line":27,"column":9},"source":"src/functions/common.js","original":{"line":8,"column":9},"name":"minutes"},{"generated":{"line":27,"column":16},"source":"src/functions/common.js","original":{"line":8,"column":16}},{"generated":{"line":27,"column":19},"source":"src/functions/common.js","original":{"line":8,"column":19}},{"generated":{"line":27,"column":23},"source":"src/functions/common.js","original":{"line":8,"column":23}},{"generated":{"line":27,"column":24},"source":"src/functions/common.js","original":{"line":8,"column":24},"name":"is_number"},{"generated":{"line":27,"column":33},"source":"src/functions/common.js","original":{"line":8,"column":33}},{"generated":{"line":27,"column":34},"source":"src/functions/common.js","original":{"line":8,"column":34},"name":"minutes"},{"generated":{"line":27,"column":41},"source":"src/functions/common.js","original":{"line":8,"column":41}},{"generated":{"line":27,"column":42},"source":"src/functions/common.js","original":{"line":8,"column":42}},{"generated":{"line":27,"column":45},"source":"src/functions/common.js","original":{"line":8,"column":45},"name":"minutes"},{"generated":{"line":27,"column":52},"source":"src/functions/common.js","original":{"line":8,"column":52}},{"generated":{"line":27,"column":55},"source":"src/functions/common.js","original":{"line":8,"column":55}},{"generated":{"line":27,"column":56},"source":"src/functions/common.js","original":{"line":8,"column":56}},{"generated":{"line":28,"column":2},"source":"src/functions/common.js","original":{"line":9,"column":2}},{"generated":{"line":30,"column":2},"source":"src/functions/common.js","original":{"line":11,"column":2}},{"generated":{"line":31,"column":2},"source":"src/functions/common.js","original":{"line":11,"column":2}},{"generated":{"line":32,"column":4},"source":"src/functions/common.js","original":{"line":11,"column":2}},{"generated":{"line":33,"column":4},"source":"src/functions/common.js","original":{"line":11,"column":2}},{"generated":{"line":33,"column":11},"source":"src/functions/common.js","original":{"line":12,"column":2}},{"generated":{"line":33,"column":33},"source":"src/functions/common.js","original":{"line":12,"column":15},"name":"value"},{"generated":{"line":33,"column":38},"source":"src/functions/common.js","original":{"line":12,"column":20}},{"generated":{"line":33,"column":40},"source":"src/functions/common.js","original":{"line":12,"column":22},"name":"direction"},{"generated":{"line":33,"column":49},"source":"src/functions/common.js","original":{"line":12,"column":31}},{"generated":{"line":33,"column":51},"source":"src/functions/common.js","original":{"line":12,"column":33}},{"generated":{"line":34,"column":6},"source":"src/functions/common.js","original":{"line":13,"column":4}},{"generated":{"line":34,"column":10},"source":"src/functions/common.js","original":{"line":13,"column":8}},{"generated":{"line":34,"column":11},"source":"src/functions/common.js","original":{"line":13,"column":9},"name":"days"},{"generated":{"line":34,"column":15},"source":"src/functions/common.js","original":{"line":13,"column":13}},{"generated":{"line":34,"column":18},"source":"src/functions/common.js","original":{"line":13,"column":16}},{"generated":{"line":34,"column":22},"source":"src/functions/common.js","original":{"line":13,"column":20}},{"generated":{"line":34,"column":23},"source":"src/functions/common.js","original":{"line":13,"column":21},"name":"days"},{"generated":{"line":34,"column":27},"source":"src/functions/common.js","original":{"line":13,"column":25}},{"generated":{"line":34,"column":30},"source":"src/functions/common.js","original":{"line":13,"column":28},"name":"value"},{"generated":{"line":34,"column":35},"source":"src/functions/common.js","original":{"line":13,"column":33}},{"generated":{"line":34,"column":38},"source":"src/functions/common.js","original":{"line":13,"column":36},"name":"direction"},{"generated":{"line":34,"column":47},"source":"src/functions/common.js","original":{"line":13,"column":45}},{"generated":{"line":35,"column":4},"source":"src/functions/common.js","original":{"line":14,"column":2}},{"generated":{"line":36,"column":2},"source":"src/functions/common.js","original":{"line":14,"column":3}},{"generated":{"line":37,"column":4},"source":"src/functions/common.js","original":{"line":14,"column":3}},{"generated":{"line":38,"column":4},"source":"src/functions/common.js","original":{"line":14,"column":3}},{"generated":{"line":38,"column":11},"source":"src/functions/common.js","original":{"line":15,"column":2}},{"generated":{"line":38,"column":24},"source":"src/functions/common.js","original":{"line":15,"column":6},"name":"value"},{"generated":{"line":38,"column":29},"source":"src/functions/common.js","original":{"line":15,"column":11}},{"generated":{"line":38,"column":31},"source":"src/functions/common.js","original":{"line":15,"column":13}},{"generated":{"line":39,"column":6},"source":"src/functions/common.js","original":{"line":16,"column":4}},{"generated":{"line":39,"column":10},"source":"src/functions/common.js","original":{"line":16,"column":8}},{"generated":{"line":39,"column":11},"source":"src/functions/common.js","original":{"line":16,"column":9},"name":"add_subtract"},{"generated":{"line":39,"column":23},"source":"src/functions/common.js","original":{"line":16,"column":21}},{"generated":{"line":39,"column":24},"source":"src/functions/common.js","original":{"line":16,"column":22},"name":"value"},{"generated":{"line":39,"column":29},"source":"src/functions/common.js","original":{"line":16,"column":27}},{"generated":{"line":39,"column":31},"source":"src/functions/common.js","original":{"line":16,"column":29}},{"generated":{"line":39,"column":32},"source":"src/functions/common.js","original":{"line":16,"column":30}},{"generated":{"line":39,"column":33},"source":"src/functions/common.js","original":{"line":16,"column":31}},{"generated":{"line":40,"column":6},"source":"src/functions/common.js","original":{"line":17,"column":4}},{"generated":{"line":40,"column":13},"source":"src/functions/common.js","original":{"line":17,"column":11}},{"generated":{"line":40,"column":17},"source":"src/functions/common.js","original":{"line":17,"column":15}},{"generated":{"line":41,"column":4},"source":"src/functions/common.js","original":{"line":18,"column":2}},{"generated":{"line":42,"column":2},"source":"src/functions/common.js","original":{"line":18,"column":3}},{"generated":{"line":43,"column":4},"source":"src/functions/common.js","original":{"line":18,"column":3}},{"generated":{"line":44,"column":4},"source":"src/functions/common.js","original":{"line":18,"column":3}},{"generated":{"line":44,"column":11},"source":"src/functions/common.js","original":{"line":19,"column":2}},{"generated":{"line":44,"column":29},"source":"src/functions/common.js","original":{"line":19,"column":11},"name":"value"},{"generated":{"line":44,"column":34},"source":"src/functions/common.js","original":{"line":19,"column":16}},{"generated":{"line":44,"column":36},"source":"src/functions/common.js","original":{"line":19,"column":18}},{"generated":{"line":45,"column":6},"source":"src/functions/common.js","original":{"line":20,"column":4}},{"generated":{"line":45,"column":10},"source":"src/functions/common.js","original":{"line":20,"column":8}},{"generated":{"line":45,"column":11},"source":"src/functions/common.js","original":{"line":20,"column":9},"name":"add_subtract"},{"generated":{"line":45,"column":23},"source":"src/functions/common.js","original":{"line":20,"column":21}},{"generated":{"line":45,"column":24},"source":"src/functions/common.js","original":{"line":20,"column":22},"name":"value"},{"generated":{"line":45,"column":29},"source":"src/functions/common.js","original":{"line":20,"column":27}},{"generated":{"line":45,"column":31},"source":"src/functions/common.js","original":{"line":20,"column":29}},{"generated":{"line":45,"column":32},"source":"src/functions/common.js","original":{"line":20,"column":30}},{"generated":{"line":45,"column":33},"source":"src/functions/common.js","original":{"line":20,"column":31}},{"generated":{"line":45,"column":34},"source":"src/functions/common.js","original":{"line":20,"column":32}},{"generated":{"line":46,"column":6},"source":"src/functions/common.js","original":{"line":21,"column":4}},{"generated":{"line":46,"column":13},"source":"src/functions/common.js","original":{"line":21,"column":11}},{"generated":{"line":46,"column":17},"source":"src/functions/common.js","original":{"line":21,"column":15}},{"generated":{"line":47,"column":4},"source":"src/functions/common.js","original":{"line":22,"column":2}},{"generated":{"line":49,"column":4},"source":"src/functions/common.js","original":{"line":24,"column":2}},{"generated":{"line":50,"column":2},"source":"src/functions/common.js","original":{"line":24,"column":2}},{"generated":{"line":51,"column":4},"source":"src/functions/common.js","original":{"line":24,"column":2}},{"generated":{"line":52,"column":4},"source":"src/functions/common.js","original":{"line":24,"column":2}},{"generated":{"line":52,"column":11},"source":"src/functions/common.js","original":{"line":25,"column":2}},{"generated":{"line":52,"column":33},"source":"src/functions/common.js","original":{"line":25,"column":15},"name":"input"},{"generated":{"line":52,"column":38},"source":"src/functions/common.js","original":{"line":25,"column":20}},{"generated":{"line":52,"column":40},"source":"src/functions/common.js","original":{"line":25,"column":22}},{"generated":{"line":53,"column":6},"source":"src/functions/common.js","original":{"line":26,"column":4}},{"generated":{"line":53,"column":13},"source":"src/functions/common.js","original":{"line":26,"column":11},"name":"input"},{"generated":{"line":53,"column":18},"source":"src/functions/common.js","original":{"line":26,"column":16}},{"generated":{"line":53,"column":23},"source":"src/functions/common.js","original":{"line":26,"column":21}},{"generated":{"line":53,"column":28},"source":"src/functions/common.js","original":{"line":26,"column":26}},{"generated":{"line":53,"column":29},"source":"src/functions/common.js","original":{"line":26,"column":27}},{"generated":{"line":54,"column":4},"source":"src/functions/common.js","original":{"line":27,"column":2}},{"generated":{"line":55,"column":2},"source":"src/functions/common.js","original":{"line":27,"column":3}},{"generated":{"line":56,"column":4},"source":"src/functions/common.js","original":{"line":27,"column":3}},{"generated":{"line":57,"column":4},"source":"src/functions/common.js","original":{"line":27,"column":3}},{"generated":{"line":57,"column":11},"source":"src/functions/common.js","original":{"line":28,"column":2}},{"generated":{"line":57,"column":38},"source":"src/functions/common.js","original":{"line":28,"column":20},"name":"input"},{"generated":{"line":57,"column":43},"source":"src/functions/common.js","original":{"line":28,"column":25}},{"generated":{"line":57,"column":45},"source":"src/functions/common.js","original":{"line":28,"column":27}},{"generated":{"line":58,"column":6},"source":"src/functions/common.js","original":{"line":29,"column":4}},{"generated":{"line":58,"column":13},"source":"src/functions/common.js","original":{"line":29,"column":11},"name":"input"},{"generated":{"line":58,"column":18},"source":"src/functions/common.js","original":{"line":29,"column":16}},{"generated":{"line":58,"column":22},"source":"src/functions/common.js","original":{"line":29,"column":20}},{"generated":{"line":58,"column":26},"source":"src/functions/common.js","original":{"line":29,"column":24}},{"generated":{"line":59,"column":4},"source":"src/functions/common.js","original":{"line":30,"column":2}},{"generated":{"line":60,"column":2},"source":"src/functions/common.js","original":{"line":30,"column":3}},{"generated":{"line":61,"column":4},"source":"src/functions/common.js","original":{"line":30,"column":3}},{"generated":{"line":62,"column":4},"source":"src/functions/common.js","original":{"line":30,"column":3}},{"generated":{"line":62,"column":11},"source":"src/functions/common.js","original":{"line":31,"column":2}},{"generated":{"line":62,"column":30},"source":"src/functions/common.js","original":{"line":31,"column":12},"name":"input"},{"generated":{"line":62,"column":35},"source":"src/functions/common.js","original":{"line":31,"column":17}},{"generated":{"line":62,"column":37},"source":"src/functions/common.js","original":{"line":31,"column":19}},{"generated":{"line":63,"column":6},"source":"src/functions/common.js","original":{"line":32,"column":4}},{"generated":{"line":63,"column":13},"source":"src/functions/common.js","original":{"line":33,"column":6}},{"generated":{"line":63,"column":20},"source":"src/functions/common.js","original":{"line":33,"column":13},"name":"input"},{"generated":{"line":63,"column":25},"source":"src/functions/common.js","original":{"line":33,"column":18}},{"generated":{"line":63,"column":30},"source":"src/functions/common.js","original":{"line":33,"column":23}},{"generated":{"line":63,"column":38},"source":"src/functions/common.js","original":{"line":33,"column":31}},{"generated":{"line":63,"column":42},"source":"src/functions/common.js","original":{"line":34,"column":6},"name":"Object"},{"generated":{"line":63,"column":48},"source":"src/functions/common.js","original":{"line":34,"column":12}},{"generated":{"line":63,"column":49},"source":"src/functions/common.js","original":{"line":34,"column":13},"name":"prototype"},{"generated":{"line":63,"column":58},"source":"src/functions/common.js","original":{"line":34,"column":22}},{"generated":{"line":63,"column":59},"source":"src/functions/common.js","original":{"line":34,"column":23},"name":"toString"},{"generated":{"line":63,"column":67},"source":"src/functions/common.js","original":{"line":34,"column":31}},{"generated":{"line":63,"column":68},"source":"src/functions/common.js","original":{"line":34,"column":32},"name":"call"},{"generated":{"line":63,"column":72},"source":"src/functions/common.js","original":{"line":34,"column":36}},{"generated":{"line":63,"column":73},"source":"src/functions/common.js","original":{"line":34,"column":37},"name":"input"},{"generated":{"line":63,"column":78},"source":"src/functions/common.js","original":{"line":34,"column":42}},{"generated":{"line":63,"column":79},"source":"src/functions/common.js","original":{"line":34,"column":43}},{"generated":{"line":63,"column":84},"source":"src/functions/common.js","original":{"line":34,"column":48}},{"generated":{"line":63,"column":101},"source":"src/functions/common.js","original":{"line":34,"column":65}},{"generated":{"line":64,"column":4},"source":"src/functions/common.js","original":{"line":36,"column":2}},{"generated":{"line":65,"column":2},"source":"src/functions/common.js","original":{"line":36,"column":3}},{"generated":{"line":66,"column":4},"source":"src/functions/common.js","original":{"line":36,"column":3}},{"generated":{"line":67,"column":4},"source":"src/functions/common.js","original":{"line":36,"column":3}},{"generated":{"line":67,"column":11},"source":"src/functions/common.js","original":{"line":37,"column":2}},{"generated":{"line":67,"column":31},"source":"src/functions/common.js","original":{"line":37,"column":13},"name":"input"},{"generated":{"line":67,"column":36},"source":"src/functions/common.js","original":{"line":37,"column":18}},{"generated":{"line":67,"column":38},"source":"src/functions/common.js","original":{"line":37,"column":20}},{"generated":{"line":68,"column":6},"source":"src/functions/common.js","original":{"line":38,"column":4}},{"generated":{"line":68,"column":13},"source":"src/functions/common.js","original":{"line":38,"column":11}},{"generated":{"line":68,"column":20},"source":"src/functions/common.js","original":{"line":38,"column":18},"name":"input"},{"generated":{"line":68,"column":25},"source":"src/functions/common.js","original":{"line":38,"column":23}},{"generated":{"line":68,"column":30},"source":"src/functions/common.js","original":{"line":38,"column":28}},{"generated":{"line":68,"column":39},"source":"src/functions/common.js","original":{"line":38,"column":37}},{"generated":{"line":69,"column":4},"source":"src/functions/common.js","original":{"line":39,"column":2}},{"generated":{"line":71,"column":4},"source":"src/functions/common.js","original":{"line":41,"column":2}},{"generated":{"line":72,"column":2},"source":"src/functions/common.js","original":{"line":41,"column":2}},{"generated":{"line":73,"column":4},"source":"src/functions/common.js","original":{"line":41,"column":2}},{"generated":{"line":74,"column":4},"source":"src/functions/common.js","original":{"line":41,"column":2}},{"generated":{"line":74,"column":11},"source":"src/functions/common.js","original":{"line":42,"column":2}},{"generated":{"line":74,"column":25},"source":"src/functions/common.js","original":{"line":42,"column":7},"name":"value"},{"generated":{"line":74,"column":30},"source":"src/functions/common.js","original":{"line":42,"column":12}},{"generated":{"line":74,"column":32},"source":"src/functions/common.js","original":{"line":42,"column":14}},{"generated":{"line":75,"column":6},"source":"src/functions/common.js","original":{"line":43,"column":4},"name":"_config"},{"generated":{"line":75,"column":13},"source":"src/functions/common.js","original":{"line":43,"column":11}},{"generated":{"line":75,"column":14},"source":"src/functions/common.js","original":{"line":43,"column":12},"name":"lang"},{"generated":{"line":75,"column":18},"source":"src/functions/common.js","original":{"line":43,"column":16}},{"generated":{"line":75,"column":21},"source":"src/functions/common.js","original":{"line":43,"column":19},"name":"value"},{"generated":{"line":75,"column":26},"source":"src/functions/common.js","original":{"line":43,"column":24}},{"generated":{"line":76,"column":6},"source":"src/functions/common.js","original":{"line":44,"column":4}},{"generated":{"line":76,"column":13},"source":"src/functions/common.js","original":{"line":44,"column":11}},{"generated":{"line":76,"column":17},"source":"src/functions/common.js","original":{"line":44,"column":15}},{"generated":{"line":77,"column":4},"source":"src/functions/common.js","original":{"line":45,"column":2}},{"generated":{"line":79,"column":4},"source":"src/functions/common.js","original":{"line":47,"column":2}},{"generated":{"line":80,"column":2},"source":"src/functions/common.js","original":{"line":47,"column":2}},{"generated":{"line":81,"column":4},"source":"src/functions/common.js","original":{"line":47,"column":2}},{"generated":{"line":82,"column":4},"source":"src/functions/common.js","original":{"line":47,"column":2}},{"generated":{"line":82,"column":11},"source":"src/functions/common.js","original":{"line":48,"column":2}},{"generated":{"line":82,"column":29},"source":"src/functions/common.js","original":{"line":48,"column":11}},{"generated":{"line":83,"column":6},"source":"src/functions/common.js","original":{"line":49,"column":4}},{"generated":{"line":83,"column":13},"source":"src/functions/common.js","original":{"line":49,"column":11},"name":"_config"},{"generated":{"line":83,"column":20},"source":"src/functions/common.js","original":{"line":49,"column":18}},{"generated":{"line":83,"column":21},"source":"src/functions/common.js","original":{"line":49,"column":19},"name":"lang"},{"generated":{"line":83,"column":25},"source":"src/functions/common.js","original":{"line":49,"column":23}},{"generated":{"line":83,"column":30},"source":"src/functions/common.js","original":{"line":49,"column":28}},{"generated":{"line":83,"column":35},"source":"src/functions/common.js","original":{"line":49,"column":33}},{"generated":{"line":83,"column":48},"source":"src/functions/common.js","original":{"line":50,"column":11}},{"generated":{"line":83,"column":52},"source":"src/functions/common.js","original":{"line":50,"column":15}},{"generated":{"line":83,"column":53},"source":"src/functions/common.js","original":{"line":50,"column":16},"name":"days"},{"generated":{"line":83,"column":57},"source":"src/functions/common.js","original":{"line":50,"column":20}},{"generated":{"line":83,"column":76},"source":"src/functions/common.js","original":{"line":50,"column":24}},{"generated":{"line":83,"column":80},"source":"src/functions/common.js","original":{"line":50,"column":28}},{"generated":{"line":83,"column":81},"source":"src/functions/common.js","original":{"line":50,"column":29},"name":"hours"},{"generated":{"line":83,"column":86},"source":"src/functions/common.js","original":{"line":50,"column":34}},{"generated":{"line":83,"column":111},"source":"src/functions/common.js","original":{"line":50,"column":39}},{"generated":{"line":83,"column":115},"source":"src/functions/common.js","original":{"line":50,"column":43}},{"generated":{"line":83,"column":116},"source":"src/functions/common.js","original":{"line":50,"column":44},"name":"minutes"},{"generated":{"line":83,"column":123},"source":"src/functions/common.js","original":{"line":50,"column":51}},{"generated":{"line":83,"column":147},"source":"src/functions/common.js","original":{"line":51,"column":11}},{"generated":{"line":83,"column":151},"source":"src/functions/common.js","original":{"line":51,"column":15}},{"generated":{"line":83,"column":152},"source":"src/functions/common.js","original":{"line":51,"column":16},"name":"days"},{"generated":{"line":83,"column":156},"source":"src/functions/common.js","original":{"line":51,"column":20}},{"generated":{"line":83,"column":170},"source":"src/functions/common.js","original":{"line":51,"column":24}},{"generated":{"line":83,"column":174},"source":"src/functions/common.js","original":{"line":51,"column":28}},{"generated":{"line":83,"column":175},"source":"src/functions/common.js","original":{"line":51,"column":29},"name":"hours"},{"generated":{"line":83,"column":180},"source":"src/functions/common.js","original":{"line":51,"column":34}},{"generated":{"line":83,"column":194},"source":"src/functions/common.js","original":{"line":51,"column":38}},{"generated":{"line":83,"column":198},"source":"src/functions/common.js","original":{"line":51,"column":42}},{"generated":{"line":83,"column":199},"source":"src/functions/common.js","original":{"line":51,"column":43},"name":"minutes"},{"generated":{"line":83,"column":206},"source":"src/functions/common.js","original":{"line":51,"column":50}},{"generated":{"line":83,"column":207},"source":"src/functions/common.js","original":{"line":51,"column":52}},{"generated":{"line":84,"column":4},"source":"src/functions/common.js","original":{"line":52,"column":2}},{"generated":{"line":85,"column":2},"source":"src/functions/common.js","original":{"line":52,"column":3}},{"generated":{"line":86,"column":4},"source":"src/functions/common.js","original":{"line":52,"column":3}},{"generated":{"line":87,"column":4},"source":"src/functions/common.js","original":{"line":52,"column":3}},{"generated":{"line":87,"column":11},"source":"src/functions/common.js","original":{"line":54,"column":2}},{"generated":{"line":87,"column":28},"source":"src/functions/common.js","original":{"line":54,"column":10}},{"generated":{"line":88,"column":6},"source":"src/functions/common.js","original":{"line":55,"column":4}},{"generated":{"line":88,"column":13},"source":"src/functions/common.js","original":{"line":55,"column":11}},{"generated":{"line":88,"column":17},"source":"src/functions/common.js","original":{"line":55,"column":15},"name":"Promise"},{"generated":{"line":88,"column":24},"source":"src/functions/common.js","original":{"line":55,"column":22}},{"generated":{"line":88,"column":25},"source":"src/functions/common.js","original":{"line":55,"column":23}},{"generated":{"line":88,"column":35},"source":"src/functions/common.js","original":{"line":55,"column":24},"name":"resolve"},{"generated":{"line":88,"column":42},"source":"src/functions/common.js","original":{"line":55,"column":31}},{"generated":{"line":89,"column":8},"source":"src/functions/common.js","original":{"line":55,"column":31}},{"generated":{"line":89,"column":15},"source":"src/functions/common.js","original":{"line":55,"column":36},"name":"setTimeout"},{"generated":{"line":89,"column":25},"source":"src/functions/common.js","original":{"line":55,"column":46}},{"generated":{"line":89,"column":26},"source":"src/functions/common.js","original":{"line":55,"column":47},"name":"resolve"},{"generated":{"line":89,"column":33},"source":"src/functions/common.js","original":{"line":55,"column":54}},{"generated":{"line":89,"column":35},"source":"src/functions/common.js","original":{"line":55,"column":56},"name":"Math"},{"generated":{"line":89,"column":39},"source":"src/functions/common.js","original":{"line":55,"column":60}},{"generated":{"line":89,"column":40},"source":"src/functions/common.js","original":{"line":55,"column":61},"name":"random"},{"generated":{"line":89,"column":46},"source":"src/functions/common.js","original":{"line":55,"column":67}},{"generated":{"line":89,"column":48},"source":"src/functions/common.js","original":{"line":55,"column":69}},{"generated":{"line":89,"column":51},"source":"src/functions/common.js","original":{"line":55,"column":72}},{"generated":{"line":89,"column":55},"source":"src/functions/common.js","original":{"line":55,"column":76}},{"generated":{"line":89,"column":56},"source":"src/functions/common.js","original":{"line":55,"column":77}},{"generated":{"line":90,"column":6},"source":"src/functions/common.js","original":{"line":55,"column":77}},{"generated":{"line":90,"column":8},"source":"src/functions/common.js","original":{"line":55,"column":78}},{"generated":{"line":91,"column":4},"source":"src/functions/common.js","original":{"line":56,"column":2}},{"generated":{"line":92,"column":2},"source":"src/functions/common.js","original":{"line":56,"column":3}},{"generated":{"line":93,"column":4},"source":"src/functions/common.js","original":{"line":56,"column":3}},{"generated":{"line":94,"column":4},"source":"src/functions/common.js","original":{"line":56,"column":3}},{"generated":{"line":95,"column":6},"source":"src/functions/common.js","original":{"line":56,"column":3}},{"generated":{"line":95,"column":84},"source":"src/functions/common.js","original":{"line":58,"column":2}},{"generated":{"line":95,"column":101},"source":"src/functions/common.js","original":{"line":58,"column":20},"name":"function_arr"},{"generated":{"line":95,"column":113},"source":"src/functions/common.js","original":{"line":58,"column":32}},{"generated":{"line":96,"column":8},"source":"src/functions/common.js","original":{"line":58,"column":32}},{"generated":{"line":97,"column":10},"source":"src/functions/common.js","original":{"line":58,"column":32}},{"generated":{"line":98,"column":12},"source":"src/functions/common.js","original":{"line":58,"column":32}},{"generated":{"line":99,"column":14},"source":"src/functions/common.js","original":{"line":58,"column":32}},{"generated":{"line":100,"column":14},"source":"src/functions/common.js","original":{"line":58,"column":32}},{"generated":{"line":100,"column":21},"source":"src/functions/common.js","original":{"line":59,"column":17},"name":"Promise"},{"generated":{"line":100,"column":28},"source":"src/functions/common.js","original":{"line":59,"column":24}},{"generated":{"line":100,"column":29},"source":"src/functions/common.js","original":{"line":59,"column":25},"name":"all"},{"generated":{"line":100,"column":32},"source":"src/functions/common.js","original":{"line":59,"column":28}},{"generated":{"line":100,"column":33},"source":"src/functions/common.js","original":{"line":59,"column":29},"name":"function_arr"},{"generated":{"line":100,"column":45},"source":"src/functions/common.js","original":{"line":59,"column":41}},{"generated":{"line":100,"column":46},"source":"src/functions/common.js","original":{"line":59,"column":42},"name":"map"},{"generated":{"line":100,"column":49},"source":"src/functions/common.js","original":{"line":59,"column":45}},{"generated":{"line":100,"column":50},"source":"src/functions/common.js","original":{"line":59,"column":46}},{"generated":{"line":100,"column":60},"source":"src/functions/common.js","original":{"line":59,"column":47},"name":"f"},{"generated":{"line":100,"column":61},"source":"src/functions/common.js","original":{"line":59,"column":48}},{"generated":{"line":101,"column":16},"source":"src/functions/common.js","original":{"line":59,"column":48}},{"generated":{"line":101,"column":23},"source":"src/functions/common.js","original":{"line":59,"column":53},"name":"f"},{"generated":{"line":101,"column":24},"source":"src/functions/common.js","original":{"line":59,"column":54}},{"generated":{"line":101,"column":26},"source":"src/functions/common.js","original":{"line":59,"column":56}},{"generated":{"line":102,"column":14},"source":"src/functions/common.js","original":{"line":59,"column":56}},{"generated":{"line":102,"column":16},"source":"src/functions/common.js","original":{"line":59,"column":57}},{"generated":{"line":102,"column":17},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":103,"column":12},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":104,"column":14},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":105,"column":12},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":106,"column":12},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":107,"column":14},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":108,"column":10},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":109,"column":8},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":110,"column":6},"source":"src/functions/common.js","original":{"line":59,"column":58}},{"generated":{"line":110,"column":7},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":111,"column":6},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":112,"column":8},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":113,"column":6},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":114,"column":6},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":115,"column":4},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":116,"column":2},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":117,"column":2},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":118,"column":0},"source":"src/functions/common.js","original":{"line":60,"column":3}},{"generated":{"line":119,"column":0},"source":"src/functions/common.js","original":{"line":60,"column":3}}],"sources":{"src/functions/common.js":"let _config = { lang: \"en\" };\n\nexport default class Common {\n  constructor(days, hours, minutes) {\n    this.config = { lang: \"en\" };\n    this.days = this.is_number(days) ? days : 0;\n    this.hours = this.is_number(hours) ? hours : 0;\n    this.minutes = this.is_number(minutes) ? minutes : 0;\n  }\n\n  //CORE\n  add_subtract(value, direction) {\n    this.days = this.days + value * direction;\n  }\n  add(value) {\n    this.add_subtract(value, 1);\n    return this;\n  }\n  subtract(value) {\n    this.add_subtract(value, -1);\n    return this;\n  }\n\n  //CHECKING\n  is_undefined(input) {\n    return input === void 0;\n  }\n  is_null_undefined(input) {\n    return input == null;\n  }\n  is_number(input) {\n    return (\n      typeof input === \"number\" ||\n      Object.prototype.toString.call(input) === \"[object Number]\"\n    );\n  }\n  is_boolean(input) {\n    return typeof input === \"boolean\";\n  }\n\n  //CONFIG\n  lang(value) {\n    _config.lang = value;\n    return this;\n  }\n\n  //DISPLAY\n  format() {\n    return _config.lang === \"chn\"\n      ? `${this.days}日${this.hours}小時${this.minutes}分`\n      : `${this.days}-${this.hours}-${this.minutes}`;\n  }\n\n  sleep() {\n    return new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));\n  }\n\n  async resolve_all(function_arr) {\n    return await Promise.all(function_arr.map((f) => f()));\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"4696dd08c8b9a9aa259c7d11da7a5a9d","cacheData":{"env":{}}}